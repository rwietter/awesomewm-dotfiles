[user]
	email = rwietter@zohomail.com
	name = rwietter
	defaultBranch = main
[init]
	defaultBranch = main
[editor]
	editor = code --wait --reuse-window
[core]
	excludesfile = /home/rwietter/.gitignore_global
	editor = code --wait
[diff]
	noprefix = true
[apply]
  whitespace = fix # Detect whitespace errors when applying a patch
[color]
  ui = auto
[merge]
  log = true # Include summaries of merged commits in newly created merge commit messages
[alias]
	# ----------------------------------------------------------------------------------------------------------------- #
	# -------------------------------------------- Git config aliases ------------------------------------------------- #
	# * Git lets you use non-git commands and full sh shell syntax in your aliases if you prefix them with "!".			    #
	# * Note that aliases prefixed with ! in this way are run from the root directory.
	# ----------------------------------------------------------------------------------------------------------------- #

	# The checkout command is used to switch between branches in a repository.
	# Usage: git co <branch>
	co = checkout

	# Commit changes send to the staging area.
	# Usage: git cm <message>
	cm = commit

	# Log ramification tree.
	# Usage: git lg
	lg = log --graph --decorate --pretty=oneline --abbrev-commit

	# Log commit tree with date.
	# Usage: git lgd
	lgd = log --graph --date-order --all --pretty=format:'%C(auto)%h%Creset %C(auto)%d%Creset %s %C(green)(%ad) %C(bold cyan)<%an>%Creset' --date=short
	
	# Status of the local repository.
	# Usage: git st
	st = status -sb

	# Update local repository with remote repository using rebase.
	# Usage: git up
	up = pull --rebase
	
	# Unstage a file (remove from staging area)
	# Usage: git unstage <file>
	unstaged = reset HEAD --
	
	# Show last commit
	# Usage: git last
	llast = log -1 HEAD

	# List files changed in a commit
	# Usage: git ldiff <commit>
	ldiff = diff-tree --no-commit-id --name-only -r
	
	# Show commits for a file
	# Usage: git logf <file>
	logf = log --pretty=format:'%C(yellow)%h %C(blue)%d | %C(white)%s | %C(cyan)%cn, %C(green)%cr' --follow
	
	# List tags with commit hash
	# Usage: git ltag
	ltag = for-each-ref --sort=-taggerdate --format='%(tag) %(objectname:short) | %(subject)' refs/tags
	
	# Rebase and keep author
	# Usage: git kpauthor
	kpauthor = rebase main --exec 'git commit --amend --no-edit --reset-author'
	
	# Commit with current date
	# Usage: git cdate <message> | git commit --date "2021-01-01 00:00:00" -m <message>
	cdate = !git commit --date "$(date)" -m
	
	# Complete cycle: add, commit and push to the current branch
	# Usage: git vapo
	vapo = !git add --all && git commit && git push -u origin $(git rev-parse --abbrev-ref HEAD)
	
	# List contributors ordered by number of commits
	# Usage: git lol
	lol = !git shortlog --summary --numbered --email | awk '{print $1, $2}' | sort -rn | awk '{print $2, $1}' | sed 's/@/ /g'
	
	# List git aliases
	# Usage: git aliases <search>
	wtf = !git config --list | grep ^alias\\. | cut -c 7- | grep -Ei --color \"$1\" "#"

	# Ignore file
	# Usage: git ignore <file>
	ignore = "!ignore() { echo $1 >> .gitignore; }; ignore"

	# List ignored files
	# Usage: git ignored
	ignored = !git ls-files --others --ignored --exclude-standard --directory && git ls-files --others -i --exclude-standard

	# Show incoming commits
	# Usage: git incoming
	incoming = !(git fetch --quiet && git log --pretty=format:'%C(yellow)%h %C(white)- %C(red)%an %C(white)- %C(cyan)%d%Creset %s %C(white)- %ar%Creset' ..@{u})

	# Set upstream branch
	# Usage: git ups <branch>
	ups = !git branch --set-upstream-to=origin/$1

	# Show outgoing commits
	# Usage: git outgoing
	outgoing = !(git fetch --quiet && git log --pretty=format:'%C(yellow)%h %C(white)- %C(red)%an %C(white)- %C(cyan)%d%Creset %s %C(white)- %ar%Creset' @{u}..)

	# Unstage all files
	# Usage: git unstageall
	unstage = !git reset HEAD -- . && git checkout -- .

	# Undo last commit
	# Usage: git undo
	undo = checkout --

	# Rollback to a commit
	# Usage: git rollback <commit>
	rollback = reset --soft HEAD~1